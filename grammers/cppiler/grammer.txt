Start S N M T Id L Operation P O W Assign Expression K Lc Condition Condition1 Input F Output H C D Identifier
~~non-terminals

#include < iostream > using namespace std ; int  main ( ) { } return float while [ ] identifier number , + * - / % = ! if else cin cout string endl
~~terminals

Start
    S'N'M' ~
S
    #include'<'iostream'>' ~
N
    using'namespace'std';' ~
M
    int'main'(')'{'T'}' int'main'(')'{'}' ~
T
    Id'T' L'T' Lc'T' Input'T' Output'T' return'Identifier';'T' Id' L' Lc' Input' Output' return'Identifier';' ~
Id
    int'L' float'L'  ~
L
    identifier'Assign'Operation','L' Identifier','L' identifier'Assign'Operation';' Identifier';' ~
Operation
    number'P' Identifier'P' number' Identifier' ~
P
    O'W'P' O'W' ~
O
    +' -' *' /' %' ~
W
    number' Identifier' ~
Assign
    ='Identifier'Assign' =' ~
Expression
    Operation'K'Operation' ~
K
    ='=' >'=' <'=' !'=' ~
Lc
    while'('Expression')'{'T'}' Condition' ~
Condition
    if'('Expression')'{'T'}' if'('Expression')'{'T'}'Condition1' ~
Condition1
    else'if'('Expression')'{'T'}'Condition1' else'if'('Expression')'{'T'}' else'{'T'}' ~
Input
    cin'>'>'Identifier'F';' cin'>'>'Identifier';' ~
F
    >'>'Identifier'F' >'>'Identifier';' ~
Output
    cout'<'<'C'H';' cout'<'<'C';' ~ 
H
    <'<'C'H' <'<'C';' ~
C
    number' string' Identifier' endl' ~
Identifier
    identifier' identifier'['D']' ~
D
    number' Identifier' ~
~~~~~
original:
(in previous one the epsilon prodoctions is removed to compute the first follow and some other things easier and minor issues fixed)

Start -> SNM
S -> #include<iostream>
N -> using namespace std;
M -> int main(){TV}
V -> return 0; | e
T -> Id T | L T | Lc T | Input T | Output T | e
Id -> int L | float L 
L -> identifier Assign Z
Z -> identifier Assign Z | ;
Operation -> number P | identifier P
P -> OWP | e
O -> + | − | ∗
W -> number | identifier
Assign -> = Operation | e
Expression -> Operation K Operation
K -> == | >= | <= | !=
Lc -> while(Expression){T} | Condition
Condition -> if(Expression){T} Condition1
Condition1 -> else if(Expression){T} Condition1 | else{T} | e
Input -> cin >> identifier F;
F -> >> identifier F | e
Output -> cout << CH;
H -> << CH | e
C -> number | string | identifier
Identifier -> identifier | identifier[D]
D -> number | Identifier