Start S N M T V Id L Init Z Operation P O W Assign Expression K Lc Condition Condition1 Input F Output H C Identifier
~~non-terminals

e #include <(0) <(1) iostream >(0) >(1) using namespace std ; int  main ( ) { } return float while [ ] identifier(0) identifier(1) number , + * - / % =(0) ! if else(0) cin cout string endl else(1) =(1) break continue $
~~terminals

Start
    S'N'M' ~
S
    #include'<(0)'iostream'>(0)' ~
N
    using'namespace'std';' ~
M
    int'main'(')'{'T'}' ~
T
    Id'T' L'T' Lc'T' Input'T' Output'T' V'T' e' ~
V
    return'Operation';' break';' continue';' ~
Id
    int'L' float'L' ~
L
    Identifier'Init' Z' ~
Init
    Assign'Operation'Z' Z' ~
Z
    ;' ,'L' ~
Operation
    number'P' Identifier'P' ~
P
    O'W'P' e' ~
O
    +' -' *' /' %' ~
W
    number' Identifier' ~
Assign
    =(1)'Identifier'Assign' =(0)' ~
Expression
    Operation'K'Operation' ~
K
    =(1)'=(0)' >(0)' <(0)' >(1)'=(0)' <(1)'=(0)' !'=(0)' ~
Lc
    while'('Expression')'{'T'}' Condition' ~
Condition
    if'('Expression')'{'T'}'Condition1' ~
Condition1
    else(1)'if'('Expression')'{'T'}'Condition1' else(0)'{'T'}' e' ~
Input
    cin'F' ~
F
    >(0)'>(0)'Identifier'F' ;' ~
Output
    cout'H' ~ 
H
    <(0)'<(0)'C'H' ;' ~
C
    string' Operation' endl' ~
Identifier
    identifier(0)' identifier(1)'['Operation']' ~
~~~~
modifications:
else if ===> else(1)
else{}  ===> else(0)

= (identifier =) | (=)     ===> =(1)
=                          ===> =(0)

<= ===> <(1)
<  ===> <(0)

>= ===> >(1)
>  ===> >(0)

identifier[] ===> identifier(1)
identifier   ===> identifier(0)